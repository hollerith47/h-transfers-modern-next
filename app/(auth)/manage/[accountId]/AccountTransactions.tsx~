"use client";
import {useMutation} from "@tanstack/react-query";
import {Account} from "@/types";
import {getTransactionsByAccountId} from "@/app/actions";
import {toast} from "sonner";
import {useEffect} from "react";
import AccountItem from "@/components/AccountItem";
import TransactionForm from "@/app/(auth)/manage/[accountId]/TransactionForm";

type Props = {
    accountId: string;
}
export default function AccountTransactions({accountId}: Props) {
    const {mutateAsync, data: account, isPending, isError} = useMutation<Account>({
        mutationFn: async () => {
            return await getTransactionsByAccountId({accountId});
        },
        onError: () => {
            toast.error("Failed to fetch transactions.");
        },
    });

    useEffect(() => {
        if (accountId) {
            mutateAsync();
        }
    }, [accountId, mutateAsync]);

    if (isPending) {
        return <div>Loading transactions...</div>;
    }

    if (isError || !account) {
        return <div>Something went wrong while fetching transactions.</div>;
    }

    console.log({account})
    return (
        <>
            <AccountItem account={account}/>
            <TransactionForm account={account} />
        </>
    );
}